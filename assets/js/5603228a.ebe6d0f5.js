"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[806],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var u=n.createContext({}),l=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=l(r),m=i,d=p["".concat(u,".").concat(m)]||p[m]||f[m]||o;return r?n.createElement(d,a(a({ref:t},c),{},{components:r})):n.createElement(d,a({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=m;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[p]="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9342:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var n=r(7462),i=(r(7294),r(3905));const o={},a=void 0,s={unversionedId:"reference/Queries",id:"reference/Queries",title:"Queries",description:"Quieres represent sets of [[Entities]] that fit some defined critiera. They are most often used within systems, but you can create one-time queries just as easily.",source:"@site/docs/reference/Queries.md",sourceDirName:"reference",slug:"/reference/Queries",permalink:"/BagelECS/docs/reference/Queries",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/Queries.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Entities",permalink:"/BagelECS/docs/reference/Entities"},next:{title:"Resources",permalink:"/BagelECS/docs/reference/Resources"}},u={},l=[{value:"Modifiers",id:"modifiers",level:2},{value:"Built-in Modifiers",id:"built-in-modifiers",level:3}],c={toc:l},p="wrapper";function f(e){let{components:t,...r}=e;return(0,i.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Quieres represent sets of [","[Entities]","] that fit some defined critiera. They are most often used within systems, but you can create one-time queries just as easily."),(0,i.kt)("h2",{id:"modifiers"},"Modifiers"),(0,i.kt)("p",null,"You very rarely have to manually create a system, instead most API's take 1 or more ",(0,i.kt)("inlineCode",{parentName:"p"},"QueryModifiers:")," Fuctions that have the signature:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"\xa0type QueryModifier = (components: Set<number>) => boolean;\n")),(0,i.kt)("p",null,"Where ",(0,i.kt)("inlineCode",{parentName:"p"},"components")," is a set of all the component ID's that belong to the entity. For an entity to be part of a query, it must pass whatever modifier is defined for that query. "),(0,i.kt)("h3",{id:"built-in-modifiers"},"Built-in Modifiers"),(0,i.kt)("p",null,"For your convenince, BagelECS comes with a few built in query modifier factories"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"With(...components: number[])"),": Returns true if an entity contains ",(0,i.kt)("em",{parentName:"li"},"every")," supplied component"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Without(...components: number[])"),": Returns true if an entity has ",(0,i.kt)("em",{parentName:"li"},"none")," of the supplied"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"All(...modifiers: QueryModifier[])"),": Returns ture if an entity passes all of the supplied")))}f.isMDXComponent=!0}}]);