"use strict";(self.webpackChunktest=self.webpackChunktest||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Overview","href":"/BagelECS/docs/","docId":"index"},{"type":"link","label":"Quick Start","href":"/BagelECS/docs/quick-start","docId":"quick-start"},{"type":"category","label":"Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Components","href":"/BagelECS/docs/reference/Components","docId":"reference/Components"},{"type":"link","label":"Entities","href":"/BagelECS/docs/reference/Entities","docId":"reference/Entities"},{"type":"link","label":"Queries","href":"/BagelECS/docs/reference/Queries","docId":"reference/Queries"},{"type":"link","label":"Resources","href":"/BagelECS/docs/reference/Resources","docId":"reference/Resources"}]}]},"docs":{"index":{"id":"index","title":"Overview","description":"BagelECS is my attempt to create a typescript ECS implementation that is both performance oriented and human friendly.","sidebar":"tutorialSidebar"},"quick-start":{"id":"quick-start","title":"Quick Start","description":"Quick start","sidebar":"tutorialSidebar"},"reference/Components":{"id":"reference/Components","title":"Components","description":"Components hold all the data that is contained inside [[entities]]. BagelECS has 2 kinds of components: \\"Built-in\\" and \\"External\\"; Built-in components are made specifically for BagelECS, and benefit from all of BagelECS\' performance optimizations. External components are things that come from other libraries, and allow you greater flexibility over what you want to do.","sidebar":"tutorialSidebar"},"reference/Entities":{"id":"reference/Entities","title":"Entities","description":"Entities are the building blocks of the world. Any \\"thing\\" that exists inside your world is an entity (player, wall, lights, etc.). They hold data in the form of [[components]], which can hold values, and also represent relationships and tags.","sidebar":"tutorialSidebar"},"reference/Queries":{"id":"reference/Queries","title":"Queries","description":"Quieres represent sets of [[Entities]] that fit some defined critiera. They are most often used within systems, but you can create one-time queries just as easily.","sidebar":"tutorialSidebar"},"reference/Resources":{"id":"reference/Resources","title":"Resources","description":"Sometimes, it is useful to have global data that is not associated with any specific entity. To handle this, BagelECS supports bevy inspired resources. These follow most of the same rules as components, except they are associated with the world instead of entities.","sidebar":"tutorialSidebar"}}}')}}]);